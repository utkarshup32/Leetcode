/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(!root) return ans;
        queue<TreeNode*>q;
        q.push(root);
        bool k=true;
        while(!q.empty()){
            int p=q.size();
            vector<int>ans1(p);
            for(int i=0;i<p;i++){
               TreeNode* r=q.front();
               q.pop();
               int in=k?i:(p-i-1);
               ans1[in]=r->val;
               if(r->left) q.push(r->left);
               if(r->right) q.push(r->right);
            
            }k=!k;
            ans.push_back(ans1);
        }return ans;

    }
};